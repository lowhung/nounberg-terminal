services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: nounberg
      POSTGRES_PASSWORD: nounberg
      POSTGRES_DB: nounberg
    ports:
      - "5432:5432"
    volumes:
      - nounberg-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nounberg || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    restart: always

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - redis-data:/data

  memcached:
    image: memcached:1.6-alpine
    restart: always
    ports:
      - "11211:11211"
    command: memcached -m 128 # Limit to 128MB of memory
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "11211"]
      interval: 5s
      timeout: 5s
      retries: 3

  ponder:
    build:
      context: ./packages/ponder
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://nounberg:nounberg@postgres:5432/nounberg
      DATABASE_SCHEMA: public
      PONDER_RPC_URL_1: ${PONDER_RPC_URL_1}
      PONDER_LOG_LEVEL: info
      SERVICE_NAME: ponder
      WORKERS_JOB_API_URL: http://workers-api:3001
    ports:
      - "42069:42069"

  api:
    build:
      context: ./packages/api
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgres://nounberg:nounberg@postgres:5432/nounberg
      DATABASE_SCHEMA: public
      SERVICE_NAME: api
      PORT: 3000

  # Background workers
  workers:
    build:
      context: ./packages/workers
      dockerfile: Dockerfile
    command: npm run start
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      memcached:
        condition: service_started
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://nounberg:nounberg@postgres:5432/nounberg
      DATABASE_SCHEMA: public
      SERVICE_NAME: workers
      ETHEREUM_RPC_URL: ${PONDER_RPC_URL_1}
      MEMCACHED_SERVERS: memcached:11211
      REDIS_URL: redis://redis:6379
    # Use the deployment section to scale workers
    deploy:
      replicas: 3  # Start with 3 workers
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  # Workers API for job submission
  workers-api:
    build:
      context: ./packages/workers
      dockerfile: Dockerfile
    command: npm run start:api
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "3001:3001"  # Job API port
    environment:
      SERVICE_NAME: workers-api
      REDIS_URL: redis://redis:6379
      PORT: 3001

  frontend:
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - api
    ports:
      - "8080:80"
    environment:
      REACT_APP_API_URL: http://localhost:3000
      REACT_APP_WS_URL: ws://localhost:3000

volumes:
  nounberg-data:
    name: nounberg-data
  redis-data:
    name: redis-data
services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: nounberg
      POSTGRES_PASSWORD: nounberg
      POSTGRES_DB: nounberg
    ports:
      - "5432:5432"
    volumes:
      - nounberg-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nounberg || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    restart: always

  memcached:
    image: memcached:1.6-alpine
    restart: always
    ports:
      - "11211:11211"
    command: memcached -m 128 # Limit to 128MB of memory
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "11211"]
      interval: 5s
      timeout: 5s
      retries: 3

  server:
    build:
      context: .
      dockerfile: Dockerfile.server
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      memcached:
        condition: service_started
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgres://nounberg:nounberg@postgres:5432/nounberg
      DATABASE_SCHEMA: public
      PONDER_RPC_URL_1: ${PONDER_RPC_URL_1}
      PORT: 3000
      MEMCACHED_SERVERS: memcached:11211
    volumes:
      - /app/node_modules

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    restart: unless-stopped
    depends_on:
      - server
    ports:
      - "8080:80"

  workers:
    build:
      context: .
      dockerfile: Dockerfile.workers
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      memcached:
        condition: service_started
    environment:
      DATABASE_URL: postgres://nounberg:nounberg@postgres:5432/nounberg
      PONDER_DATABASE_URL: postgres://nounberg:nounberg@postgres:5432/nounberg
      DATABASE_SCHEMA: public
      ETHEREUM_RPC_URL: ${PONDER_RPC_URL_1}
      WORKER_JOB_TYPES: "enrich_event"  # Default job type
      WORKER_POLL_INTERVAL: 1000
      WORKER_CONCURRENCY: 2  # Process up to 2 jobs concurrently per worker
      MEMCACHED_SERVERS: memcached:11211
    volumes:
      - /app/node_modules
    # Use the deployment section to scale workers
    deploy:
      replicas: 3  # Start with 3 workers
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

volumes:
  nounberg-data:
    name: nounberg-data